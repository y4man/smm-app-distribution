"""
Django settings for smm_prod_project project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Media settings
SUPABASE_URL = "https://supabase.smmexperts.pro"      # your self-hosted endpoint
SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiaXNzIjoic3VwYWJhc2UiLCJpYXQiOjE3NDcxNjI4MDAsImV4cCI6MTkwNDkyOTIwMH0.LBFYEDYyVGwNfikAWS1z6gWJ3BnaD8NcBpRk637TPjM"      # must have storage:write rights
SUPABASE_BUCKET = "smm-crm"
# Media settings using Supabase Storage
MEDIA_URL = f'{SUPABASE_URL}/storage/v1/object/public/{SUPABASE_BUCKET}/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # <-- REMOVE or COMMENT OUT THIS LINE

DEFAULT_FILE_STORAGE = 'pro_app.storage_backends.SupabaseStorage'

SUPABASE_STORAGE_OPTIONS = {
    'bucket': SUPABASE_BUCKET,
    'root_path': '',  # Ensure files are uploaded directly to bucket root
}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5_-^%$!w_v%f7(w4nr!oj9bhyv)9pz3$--l0ddaqlm$7^we0*f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = ['api.smmexperts.pro', '192.168.1.118', '82.112.250.140', ]

# for testing
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'pro_app',
    'corsheaders',
    'django_extensions',
    'channels',
    'storages',
    'debug_toolbar',
    'silk',
]

EXTERNAL_APPS = [
    'user',
    'account',
    'client',
    'plan',
    'calender',
    'team',
    'post',
    'task',
    'strategy',
    'threadNotes',
    'notifications'
]

DEBUG = True
INSTALLED_APPS += EXTERNAL_APPS


ASGI_APPLICATION = 'pro_app.asgi.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [('127.0.0.1', 6379)],  # Redis server address
        },
    },
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_simplejwt.authentication.JWTAuthentication',
        # 'pro_app.authentication.CookieJWTAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5),
#     'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
#     'ROTATE_REFRESH_TOKENS': False,
#     'BLACKLIST_AFTER_ROTATION': True,
#     'ALGORITHM': 'HS256',
#     'SIGNING_KEY': SECRET_KEY,
# }
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=1440),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'silk.middleware.SilkyMiddleware',
]

ROOT_URLCONF = 'smm_prod_project.urls'

# Allow credentials (cookies)
CORS_ALLOW_CREDENTIALS = True

# Allow your frontend's port (e.g., React running on port 3000)
CORS_ORIGIN_WHITELIST = [
    'https://localhost:5173/',  # React frontend port
    'https://api.smmexperts.pro',  # React frontend port
    'https://api.smmexperts.pro',  # React frontend port
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smm_prod_project.wsgi.application'

CORS_ALLOWED_ORIGINS = [
    'https://localhost:5173',  # React frontend
    'https://api.smmexperts.pro',  # React frontend
    'https://app.smmexperts.pro',  # React frontend
]


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'test2',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# Just for testing

INTERNAL_IPS = [
    "127.0.0.1",  # for localhost
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.mailgun.org'
EMAIL_PORT = 587  # Port for TLS
EMAIL_HOST_USER = 'danish@mysocialmarketingexpert.com'
# EMAIL_HOST_PASSWORD = r"<}:aD[0Nq\aMNud"
EMAIL_HOST_PASSWORD = "Search$fs8@"
EMAIL_USE_TLS = True  # Use TLS
EMAIL_USE_SSL = False  # Do not use SSL


# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'abbas.dksolutions@gmail.com'
# EMAIL_HOST_PASSWORD = 'tsidcvtigttqbxll'  # Ensure you're using the correct app password



# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },
#     },
# }

AUTH_USER_MODEL = 'account.CustomUser'


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# FRONTEND_DOMAIN = "https://app.smmexperts.pro"
FRONTEND_DOMAIN = "http://127.0.0.1:8000/"

SECURE_COOKIE = True  # Change this to True when deploying in production with HTTPS

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'x-requested-with',
    'accept',
    'origin',
    'user-agent',
    'cache-control',
    'x-csrf-token',
]
CORS_ALLOW_METHODS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS']


# # WASABI S3 Bucket Config
# AWS_ACCESS_KEY_ID = 'VMO8288SIE8GCS2AYEYR'
# AWS_SECRET_ACCESS_KEY = 'MqizRcdfND9CIqfTvTzIrNuqwenb0Y2eGciItFCw'
# AWS_STORAGE_BUCKET_NAME = 'smm-crm'
# AWS_S3_ENDPOINT_URL = 'https://s3.us-central-1.wasabisys.com'  # Change the region accordingly
# AWS_S3_REGION_NAME = 'us-central-1'  # Change according to your Wasabi bucket region
# AWS_S3_FILE_OVERWRITE = False
# AWS_DEFAULT_ACL = None
# AWS_QUERYSTRING_AUTH = True  # To avoid generating signed URLs for public access

# # Use Wasabi as your default file storage
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# AWS_S3_CUSTOM_DOMAIN = f"{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.wasabisys.com"



# settings.py


